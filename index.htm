<!DOCTYPE html>
<html lang="en">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>jQuery Related Selects</title>
<style type="text/css">
body { font:12px helvetica, arial, sans-serif; }
h2 { margin:25px 0 20px 0 }
#placeholder { color:black; padding:8px; border:2px solid black; display:none }
#placeholder.success { color:green; border-color:green; }
#placeholder.error { color:red; border-color: red }
</style>
<script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.4.2/jquery.js"></script>
<script type="text/javascript" src="src/jquery.relatedselects.js"></script>
<script type="text/javascript">
$(function(){

	$("#example-basic").relatedSelects({
		"basic-county": {
			depends: "basic-state",
			loadingMessage: "Loading counties...",
			source: "datasupplier.php"
		},
		"basic-town": {
			depends: "basic-county",
			loadingMessage: "Loading towns...",
			source: "datasupplier.php"
		},
		"basic-village": {
			depends: "basic-town",
			loadingMessage: "Loading villages...",
			source: 'datasupplier.php'
		}
	});

	var placeholder = $("#placeholder");
	$("#example-depends").relatedSelects({
		"depends-state": {
			depends: "depends-country",
			loadingMessage: "Loading states....",
			source: function(){
				return [
					{ value:"MA", text:"Massachusetts"},
					{ value:"VT", text:"Vermont" }
				];
			}
		},
		
		"depends-county": {
			depends: "depends-state",
			loadingMessage: "Loading counties...",
			source: [
				{ value: "BARN", text:"Barnstable" },
				{ value: "PLYM", text:"Plymouth" }
			]
		},
		
		"depends-town": {
			// you don't really need to enumerate each one here
			// since they all depend on each other, but it's useful
			// to display which dependencies have been met
			// and which ones are left
			depends: ["depends-country", "depends-state", "depends-county", "depends-color"],
			source: [
				{ value: "CHA", text:"Chatham" },
				{ value: "ORL", text:"Orleans" }
			],
			loadingMessage: "Loading towns....",
			onDependencyChanged: function( satisfied, dependencies ){
				var html = [], left = $.map(dependencies, function(elem){
					return $.inArray(elem.name, satisfied) === -1 ? elem.name : null;
				});
				
				placeholder.show();
				
				if( !satisfied.length ) {
					placeholder.addClass('error');
					html.push('You need to choose something from these selects: ');
					html.push('<b>' + left.join('</b>, <b>') + '</b>');
				} else if( satisfied.length < dependencies.length ){
					placeholder.addClass('error');
					html.push('<b>'+satisfied.join('</b> and <b>')+'</b> ');
					html.push(satisfied.length > 1 ? 'dependencies have ' : 'dependency has ');
					html.push('been met, but you still need to select a ');
					html.push('<b>' + left.join('</b> and <b>') + '</b>.');
				} else {
					placeholder.removeClass('error').addClass('success');
					html.push('<b>All dependencies are met!  You can now select a town!</b>');
				}
				
				placeholder.html( html.join('') );
			},
			onLoadingStart: function(){
				placeholder.html("Loading towns...");
			},
			onLoadingEnd: function(){
				placeholder.html("");
			}
		}
	});
	
	$("#example-attr").relatedSelects({
		"attr-state": {
			depends: "attr-country",
			loadingMessage: "Loading states...",
			source: [
				{ value: "MA", text:"Massachusetts" }
			]
		},
		"attr-county": {
			depends: "attr-state",
			loadingMessage: "Loading towns...",
			source: [
				{ value: "BARN", text:"Barnstable" }
			]
		}
	});
});
</script>

</head>
<body>

<h1>jQuery Related Selects Plugin 2.0</h1>

<h2>Demo: basic usage</h2>
<p>The state select is pre-populated, and the rest will populate based on preceding values.  Each select is configured with a custom loading message, and the default option text is set to &quot;Choose an Option&quot;.  This demo shows four select boxes, but you can have as little as 2 and as many as your heart desires.</p>
<form id="example-basic">
	<select id="basic-state" name="stateID">
	<option value="">Choose State &raquo;</option>
	<option value="MA">Massachusetts</option>
	<option value="VT">Vermont</option>
	</select>

	<select id="basic-county" name="countyID">
	<option value="">Choose County &raquo;</option>
	</select>

	<select id="basic-town" name="townID">
	<option value="">Choose Town &raquo;</option>
	</select>

	<select id="basic-village" name="villageID">
	<option value="">Choose Village &raquo;</option>
	</select>
</form>

<h2>Demo: multiple dependencies</h2>
<form id="example-depends">
    <p>The country select is pre-populated when the page loads.  The state's datasource is a function that returns an array, the county's datasource is an array, and the town's datasource is an array.</p>
    
    <select name="country" id="depends-country">
        <option value="">Select a Country</option>
        <option value="US">USA! USA!</option>
        <option value="CA">Canada</option>
    </select>
    
    <select name="state" id="depends-state">
        <option value="">Select a State</option>
    </select>
    
    <select name="county" id="depends-county">
        <option value="">Select a County</option>
    </select>
    
    <select name="town" id="depends-town">
        <option value="">Select a Town</option>
        <option value="CHA">Chatham</option>
    </select>
    
    <p>In order to populate the towns select, I also need to know your favorite color!  OMG multiple dependencies!</p>
    
    <select name="color" id="depends-color">
        <option value="">Select a Color</option>
        <option value="blue">blue</option>
        <option value="red">red</option>
    </select>
    
    <p id="placeholder" class="error"></p>
</form>

<h2>Demo: automatically select values</h2>
<p>A common use case is pre-selecting values that are returned from the server, like in an edit form.  By adding the HTML5 <strong>data-selected</strong> attribute to your select, with a value to match a value returned from your source attribute, you can automatically select a dynamically created option.</p>

<form id="example-attr">
    <select name="country" id="attr-country">
        <option value="">Select a Country</option>
        <option value="US" selected="selected">USA! USA!</option>
    </select>
    
    <select name="state" id="attr-state" data-selected="MA">
        <option value="">Select a State</option>
    </select>

    <select name="town" id="attr-county" data-selected="BARN">
        <option value="">Select a County</option>
    </select>
</form>

</body>
</html>

